{"version":3,"sources":["components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Expenses/Expense.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ChartBar","props","barFillHeight","maxValue","Math","round","value","className","style","height","label","Chart","dataPointValues","dataPoints","map","datapoint","totalMaximum","max","dataPoint","ExpenseChart","chartDataPoints","expense","date","getMonth","amount","Card","classes","children","ExpenseFilter","selected","onChange","e","onFilterChange","target","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","title","ExpensesList","items","length","exp","id","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","onPersistExpense","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpenseData","storedExpenses","storage","localStorage","getItem","JSON","parse","App","expenses","setExpenses","prevExpenses","Expense","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20d3a87f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((datapoint) => datapoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpenseChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sept\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expense) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\nexport default ExpenseChart;\r\n","import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import \"./ExpenseFilter.css\";\r\n\r\nconst ExpenseFilter = (props) => {\r\n  const dropDownHandler = (e) => {\r\n    props.onFilterChange(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter By Year</label>\r\n        <select value={props.selected} onChange={dropDownHandler}>\r\n          <option value=\"2024\">2024</option>\r\n          <option value=\"2023\">2023</option>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseFilter;\r\n","import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  \r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\nimport \"./ExpenseItem.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n        </div>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpenseList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no Expenses</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((exp) => (\r\n        <ExpenseItem\r\n          key={exp.id}\r\n          title={exp.title}\r\n          amount={exp.amount}\r\n          date={exp.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ExpensesList;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseChart from \"./ExpenseChart\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expense.css\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\nimport ExpensesList from \"./ExpenseList\";\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2022\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n  props.onPersistExpense(props.items);\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpenseFilter\r\n          selected={filteredYear}\r\n          onFilterChange={filterChangeHandler}\r\n        />\r\n        <ExpenseChart expense={filteredExpenses} />\r\n\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import react, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: \"\",\r\n  //   enteredAmount: \"\",\r\n  //   enteredDate: \"\",\r\n  // });\r\n\r\n  const titleChangeHandler = (e) => {\r\n    setEnteredTitle(e.target.value);\r\n  };\r\n  const amountChangeHandler = (e) => {\r\n    setEnteredAmount(e.target.value);\r\n  };\r\n  const dateChangeHandler = (e) => {\r\n    setEnteredDate(e.target.value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n          <div className=\"new-expense__control\">\r\n            <label>Title</label>\r\n            <input\r\n              type=\"text\"\r\n              value={enteredTitle}\r\n              onChange={titleChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Amount</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              value={enteredAmount}\r\n              onChange={amountChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Date</label>\r\n            <input\r\n              type=\"date\"\r\n              min=\"2012-01-01\"\r\n              max=\"2024-01-01\"\r\n              value={enteredDate}\r\n              onChange={dateChangeHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button type=\"button\" onClick={props.onCancel}>\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpenseData(expenseData);\r\n  };\r\n\r\n  const startIsEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const stopIsEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startIsEditingHandler}>Add Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopIsEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expense\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nlet storedExpenses = [];\n\nconst storage = localStorage.getItem(\"expense\");\n\nif (storage) storedExpenses = JSON.parse(storage);\nstoredExpenses.map((exp) => (exp.date = new Date(exp.date)));\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(storedExpenses);\n  // const [storedExpenses, setStoredExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n  const persistExpenseHandler = function (Expense) {\n    localStorage.setItem(\"expense\", JSON.stringify(Expense));\n  };\n  return (\n    <div>\n      <NewExpense onAddExpenseData={addExpenseHandler} />\n\n      <Expenses items={expenses} onPersistExpense={persistExpenseHandler} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}